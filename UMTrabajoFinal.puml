@startuml
    folder Portada {
    class HelloApplication{
    +createContent():Parent
    +start(primaryStage:Stage)
    +main(args:String[])
    }
    HelloApplication-|> Application
    abstract class Application{
    //Clase abstracta de Java
    }
    class StackPane{
        //Clase de Java
        }
    class CambioDePantalla extends Pane{
    -log: Logger
    +CambioDePantalla(weidth:int,length:int)
    }
    class Pane{
    //Clase de Java
    }

    class Caja_Boton extends Pane{
        -box:VBox
        +Caja_Boton(width:int,length:int)
        +addItem:(item:Boton)
        }
    class Boton extends StackPane {
        -font:Font
            + Boton(name:String,int:width)
            +onSelected()
            +onDeselected()
            +setOnAction(action:Runnable)
        }
    }

    folder InicioSesionNP{
        interface Initializable{
        //Interfaz de Java
        }
        class InicioSesionControladorCP() implements Initializable{
        -textFieldNombre:TextField
        -textFielContraseña:PassWordField
        - model:InicioSesionPropertiesNP
        +onMiBotonRegistrarseClick()
        +setStage(s:Stage)
        +onMiBotonJugarClick()
        +updateGUIwithModel()
        +initialize(location:URL, resources:ResourceBundle)
        +loadUserData(parametrosData:InicioSesionPropertiesNP)
        }
        class InicioSesionModelNP{
        -usuario=" ":String
        -contrasena=" ":String
        +IniciosesionModelNP(nombre:String,contrasena:String)
        +IniciosesionModelNP()
        +getUsuario():String
        +setUsuario(usuario:String)
        +getContraseña():String
        +setContraseña(contrasena:String)
        }

        class InicioSesionPropertiesNP{
        -original:InicioSesionModelCP
        -nombre:StringProperty
        -contraseña:StringProperty

        +InicioSesionPropertiesNP(original:InicioSesionModelNP) {
        +commit()
        +rollback()
        +setOriginal(original:InicioSesionModelNP )
        +nombreProperty():Property<String>
        +contrasenaProperty():Property<String>
        }
        }
    folder InicioSesionCP{
    interface Initializable{
            //Interfaz de Java
            }
    class InicioSesionControladorCP implements Initializable{
    -textFieldNombre:TextField
    -textFielContraseña:PassWordField
    - model:InicioSesionPropertiesCP
    +onMiBotonRegistrarseClick()
    +setStage(s:Stage)
    +onMiBotonJugarClick()
    +updateGUIwithModel()
    +initialize(location:URL, resources:ResourceBundle)
    +loadUserData(parametrosData:InicioSesionPropertiesCP)
    }
    class InicioSesionModelCP{
    -usuario=" ":String
    -contrasena=" ":String
    +IniciosesionModelNP(nombre:String,contrasena:String)
    +IniciosesionModelCP()
    +getUsuario():String
    +setUsuario(usuario:String)
    +getContraseña():String
    +setContraseña(contrasena:String)}

    }
    class InicioSesionPropertiesCP{
    -original:InicioSesionModelCP
    -nombre:StringProperty
    -contraseña:StringProperty
    +InicioSesionPropertiesCP(original:InicioSesionModelCP) {
    +commit()
    +rollback()
    +setOriginal(original:InicioSesionModelCP )
    +nombreProperty():Property<String>
    +contrasenaProperty():Property<String>



    }
    }
    folder Registrarse{
    interface Initializable{
                //Interfaz de Java
                }
    class RegistrarseControlador implements Initializable{
    -textFieldNombre:TextField
    -textFielContraseña:PassWordField
    +initialize(location:URL, resources:ResourceBundle)
    +loadUserData(parametrosData:InicioSesionPropertiesCP)
    +onMiBotonGuardarClick()
    +updateGUIwithModel()
    +setStage(s:Stage)
    }
    class RegistrarseModelo{
    -usuario=" ":String
    -contrasena=" ":String
    +RegistrarseModelo(nombre:String,contrasena:String)
    +RegistrarseModelo()
    +getUsuario():String
    +setUsuario(usuario:String)
    +getContraseña():String
    +setContraseña(contrasena:String)
    }
    class RegistrarseProperties{
    -original:InicioSesionModelCP
    -nombre:StringProperty
    -contraseña:StringProperty
    +InicioSesionPropertiesCP(original:InicioSesionModelCP) {
    +commit()
    +rollback()
    +setOriginal(original:InicioSesionModelCP )
    +nombreProperty():Property<String>
    +contrasenaProperty():Property<String>
    }


    }
   package "Clases" {
       package "Elementos" {
       abstract class Elementos{
                      -x:int
                      -y:int
                      Elementos(x:int,y:int)
                      +getX():int
                      +getY():int
                      +setX(x:int)
                      +setY(y:int)
                      }
           package "Individuos" {


               class Individuos extends Elementos{
               -id:int
               -turnosdevida:int
               -probrep:int
               -probclon:int
               -tipo:String
               +Individuos(x:int, y:int, id:int, turnosvida:int, probrep:int,probclon:int) {
               +setTipo(tipo:String){
               +getId():int
               +setId(id:id)
               +getTurnosvida():int
               +setTurnosDeVida(turnosdevida:int)
               +getProbrep:int
               +setProbrep(probrep:int)
               +getProbclon:int
               +setProbclon(probclon:int)
               }
                class Avanzado extends Individuos {
                                  +Avanzado(x:int, y:int, id:int, turnosvida:int, probrep:int,probclon:int)
                }
                 class Normal extends Individuos {
                   +Normal(x:int, y:int, id:int, turnosvida:int, probrep:int,probclon:int)
                                }
                class Basico extends Individuos {
                   +Basico(x:int, y:int, id:int, turnosvida:int, probrep:int,probclon:int)
                               }
           }
           package "Recursos"{
           class Recursos{
           -x:int
           -y:int
           -tipo:String
           -Probabilidad_Z:int
           -Probabilidad_V:int
           +Recursos(x:int, y:int Probabilidad_Z:int, Probabilidad_V:int)
           +setTipo(tipo:String)
           +getX():int
           +setX(x:int)
           +getY():int
           +setY(y:int)
           +getProbabilidad_Z():int
           +getProbabilidad_V():int
           +setProbabilida_V(Probabilida_V:int)
           +setProbabilidad_Z(Probabilidad_Z:int)
           +getTipo():String
           +setTipo(tipo:String)
           }
           }





       }
   }
    folder TableroDeJuego{
    class Tablero{
    +setTablero(filas:int,columnas:int):Parent
    }
    class Pane{
    //Clase Java
    }
    class StackPane{
    //Clase de Java
    }
    class Botones extends StackPane{
    -font:Font
    +Botones(width:int)
    +setOnAction(action:Runnable)
    }
    class Box extends Pane{
    -box:VBox
    +Box(width:int,length:int,fondo: String}







}


@enduml





